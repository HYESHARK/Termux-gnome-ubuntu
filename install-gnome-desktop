#!/bin/bash

R="$(printf '\033[1;31m')"
G="$(printf '\033[1;32m')"
Y="$(printf '\033[1;33m')"
W="$(printf '\033[1;37m')"
C="$(printf '\033[1;36m')"

function banner() {
      clear
    printf "\033[33mTERMUX GNOME\033[0m\n"
    echo "${C}${BOLD} Install Gnome Desktop In Ubuntu"${W}
    echo "${C}${BOLD} by nduyy"${W}
    echo                                                   
}

function package_install_and_check() {
    packs_list=($@)
    for package_name in "${packs_list[@]}"; do
        echo "${R}[${W}-${R}]${G}${BOLD} Installing package: ${C}$package_name ${W}"
        apt install "$package_name" -y || {
            echo "${R}[${W}-${R}]${R} Error installing $package_name. Attempting to fix... ${W}"
            apt --fix-broken install -y
            dpkg --configure -a
        }

        if dpkg -s "$package_name" >/dev/null 2>&1; then
            echo "${R}[${W}-${R}]${G} $package_name installed successfully ${W}"
        else
            echo "${R}[${W}-${R}]${R} $package_name installation failed. ${W}"
        fi
    done
}

function check_root(){
    if [ $EUID -ne 0 ]; then
        echo -ne " ${R}Please Login Into Root User Then Run it Again!\n\n"${W}
        exit 1
    fi
}

function questions() {
    banner
    echo 
    echo "${R} [${W}-${R}]${G}Select the Gnome Desktop type"${W}
    echo
    echo "${Y}1. Full (~3.5Gb of space)"${W}
    echo
    echo "${Y}2. Core (~1.5GB of space)"${W}
    echo
    read -p "${Y}select an option (Default 1): "${W} answer_desktop
    answer_desktop=${answer_desktop:-1} 
    echo
    echo "${R}[${W}-${R}]${G}Continuing with answer: $answer_desktop"${W}
    sleep 0.2
    banner
    echo 
    echo "${R} [${W}-${R}]${G}Select browser you want to install"${W}
    echo
    echo "${Y}1. firefox"${W}
    echo
    echo "${Y}2. chromium"${W}
    echo 
    echo "${Y}3. firefox & chromium (both)"${W}
    echo
    read -p "${Y}select an option (Default 1): "${W} answer_browser
    answer_browser=${answer_browser:-1} 
    echo
    echo "${R}[${W}-${R}]${G}Continuing with answer: $answer_browser"${W}
    sleep 0.2
    banner
    read -p "${R} [${W}-${R}]${Y}Do you want to install VLC (y/n) "${W} vlc_answer
    vlc_answer=${vlc_answer:-y} 
    echo
    echo "${R}[${W}-${R}]${G}Continuing with answer: $vlc_answer"${W}
    sleep 0.2
    banner
    read -p "${R} [${W}-${R}]${Y}Do you want to create a normal user account (y/n) "${W} useradd_answer
    useradd_answer="${useradd_answer:-y}"
    echo "${R}[${W}-${R}]${G}Continuing with answer: $useradd_answer"${W}
    sleep 0.2
    banner
    if [[ "$useradd_answer" == "n" ]]; then
        banner
        echo "${R} [${W}-${R}]${G}Skiping User Account Setup"${W}
    else
        echo "${R} [${W}-${R}]${G}Create user account"${W}
        echo
        while true; do
            read -p "${R} [${W}-${R}]${G}Input username [Lowercase]: "${W} user_name
            echo
            read -p "${R} [${W}-${R}]${G}Input Password: "${W} pass
            echo
            read -p "${R} [${W}-${R}]${Y}Do you want to continue with username ${C}$user_name ${Y}and password ${C}$pass${Y} ? (y/n) : " choice
            choice="${choice:-y}"
            case $choice in
                [yY]* )
                    echo "${R} [${W}-${R}]${G}Continuing with username ${C}$user_name ${G}and password ${C}$pass"
                    sleep 0.3
                    break;;
                [nN]* )
                    echo "${G}Skipping useradd step"${W}
                    sleep 0.3
                    break;;
                * )
                    echo "${R}Invalid input. Please enter 'y' or 'n'."${W}
                    ;;
            esac
        done
    fi
}

function get_sys_info() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        if [[ -e "/data/data/com.termux/files/usr/bin/$ID" ]]; then
            rm -rf /data/data/com.termux/files/usr/bin/$ID
        fi
    fi
}

function update_sys() {
    banner
    echo "${R} [${W}-${R}]${G}Updating ${ID}'s System..."
    apt update && apt-get update 
}

function setup_vnc() {
    if [ "$useradd_answer" == "y" ]; then
        final_user="$user_name"
    else
        final_user="root"
    fi
    cat <<EOF >> "/data/data/com.termux/files/usr/bin/$ID"
session_dir="\$HOME/.cache/sessions"
if [ -d "\$session_dir" ]; then
    files_to_remove=\$(find "\$session_dir" -type f -name 'x*')
    if [ -n "\$files_to_remove" ]; then
        rm "\$session_dir"/x* > /dev/null 2>&1
    fi
fi

if [ "\$1" = "-remove" ]; then
    proot-distro remove $ID
    rm /data/data/com.termux/files/home/.${ID}-sound-service
    rm \$PREFIX/bin/$ID
elif [ "\$1" = "-r" ]; then
    proot-distro login $ID
elif [ "\$1" = "-vnc" ]; then
    vncserver -geometry 1920x1080 :1
    sleep 3
    proot-distro login $ID --user $final_user --shared-tmp -- /bin/bash -c "export DISPLAY=:1 gnome-session &"
    exit 0
else
    proot-distro login --user $final_user $ID
fi
EOF
    chmod +x /data/data/com.termux/files/usr/bin/$ID
}

function install_vnc() {
    echo "${R} [${W}-${R}]${G}Installing VNC Server...${W}"
    package_install_and_check tigervnc
}

function install_gnome() {
    echo "${R} [${W}-${R}]${G}Installing GNOME...${W}"
    package_install_and_check gnome gnome-terminal gnome-tweaks gnome-screenshot gnome-system-monitor
}

function install_browsers() {
    case $answer_browser in
        1)
            echo "${R} [${W}-${R}]${G}Installing Firefox...${W}"
            package_install_and_check firefox
            ;;
        2)
            echo "${R} [${W}-${R}]${G}Installing Chromium...${W}"
            package_install_and_check chromium
            ;;
        3)
            echo "${R} [${W}-${R}]${G}Installing Firefox and Chromium...${W}"
            package_install_and_check firefox chromium
            ;;
        *)
            echo "${R} [${W}-${R}]${G}Invalid option. Skipping browser installation...${W}"
            ;;
    esac
}

function install_vlc() {
    if [[ "$vlc_answer" == "y" ]]; then
        echo "${R} [${W}-${R}]${G}Installing VLC...${W}"
        package_install_and_check vlc
    else
        echo "${R} [${W}-${R}]${G}Skipping VLC installation...${W}"
    fi
}

function install_dependencies() {
    echo "${R} [${W}-${R}]${G}Installing necessary dependencies...${W}"
    package_install_and_check wget proot-distro
}

function create_user() {
    if [[ "$useradd_answer" == "y" ]]; then
        echo "${R} [${W}-${R}]${G}Creating user account: $user_name...${W}"
        useradd -m -p $(openssl passwd -1 $pass) $user_name
    else
        echo "${R} [${W}-${R}]${G}Skipping user account creation...${W}"
    fi
}

# Start of the script
check_root
get_sys_info
update_sys
questions
install_dependencies
setup_vnc
install_vnc
install_gnome
install_browsers
install_vlc
create_user

echo "${G}Installation complete! You can now start the VNC server using: ${R}vncserver -geometry 1920x1080 :1${W}"
